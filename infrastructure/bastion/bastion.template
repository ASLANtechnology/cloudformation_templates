{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Bastion Host by Levon Becker v20160405-1130",
  "Parameters": {
    "Ec2KeyPair": {
      "Description": "Select Keypair to Assign to EC2 Instances",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "Owner": {
      "Description": "Enter Team or Individual Name Responsible for the Stack.",
      "Type": "String",
      "Default": "Levon Becker"
    },
    "Project": {
      "Description": "Enter Project Name.",
      "Type": "String",
      "Default": "Bastion Creation"
    },
    "DeleteAfter": {
      "Description": "Enter Date It's Ok to Delete the Stack or 'Never' if meant to be persistent.",
      "Type": "String",
      "Default": "00/00/201x"
    },
    "VPC": {
      "Description": "Select VPC.",
      "Type": "AWS::EC2::VPC::Id"
    },
    "PublicSubnet": {
      "Description": "Public Subnet to Deploy Bastion Host in.",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "InternalAccessSecurityGroup": {
      "Description": "Security Group That Allows Bastion Host Access to Instances.",
      "Type": "AWS::EC2::SecurityGroup::Id"
    },
    "PublicNetworkAcl": {
      "Description": "Enter Public Network ACL ID.",
      "Type": "String",
      "Default": "acl-0000000"
    },
    "BastionOS": {
      "Description": "Select OS Type for Bastion Host.",
      "Type": "String",
      "Default": "rhel",
      "AllowedValues": [
        "rhel",
        "ubuntu",
        "windows"
      ]
    },
    "NetworkAccessIP": {
      "Description": "Source that has SSH access to the bastion host. (i.e. 50.32.108.38/32)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid CIDR range of the form x.x.x.x/x."
    }
  },
  "Mappings": {
    "RegionMap": {
      "us-west-2": {
        "AMIRHEL7": "ami-775e4f16",
        "AMIUbuntu14": "ami-9abea4fb",
        "AMIWin2012": "ami-1719f677",
        "InstanceTypeRHEL7": "t2.micro",
        "InstanceTypeUbuntu14": "t2.micro",
        "InstanceTypeWin2012": "t2.medium"
      },
      "us-east-1": {
        "AMIRHEL7": "ami-2051294a",
        "AMIUbuntu14": "ami-fce3c696",
        "AMIWin2012": "ami-3d787d57",
        "InstanceTypeRHEL7": "t2.micro",
        "InstanceTypeUbuntu14": "t2.micro",
        "InstanceTypeWin2012": "t2.medium"
      }
    },
    "bootstrap": {
      "rhel": {
        "warmebs": "echo 'ACTION: Performing EBS Warming' && dd if=/dev/xvda of=/dev/xvda conv=notrunc bs=1M status=progress",
        "installpackages": "yum install -y curl wget mlocate ca-certificates openssl vim",
        "installchefdk": "yum install -y https://packages.chef.io/stable/el/7/chefdk-0.12.0-1.el7.x86_64.rpm",
        "installbastionpackages": "yum install -y git wireshark nmap mysql"
      },
      "ubuntu": {
        "warmebs": "echo 'ACTION: Performing EBS Warming' && dd if=/dev/xvda of=/dev/xvda conv=notrunc bs=1M status=progress",
        "installpackages": "apt-get update && apt-get install curl wget cloud-utils ca-certificates vim",
        "installbastionpackages": "apt-get install mysql openssl"
      }
    }
  },
  "Conditions": {
    "RHELHost": { "Fn::Equals": [ { "Ref": "BastionOS" }, "rhel" ] },
    "UbuntuHost": { "Fn::Equals": [ { "Ref": "BastionOS" }, "ubuntu" ] },
    "WindowsHost": { "Fn::Equals": [ { "Ref": "BastionOS" }, "windows" ] }
  },
  "Resources": {
    "IamRole": {
      "Type"  : "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [{"Effect": "Allow", "Principal": {"Service": ["ec2.amazonaws.com"]}, "Action": ["sts:AssumeRole"]}]
        },
        "Path": "/"
      }
    },
    "IamPolicies": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-instance-policy"]]},
        "PolicyDocument": {
          "Statement": [{
            "Effect": "Allow",
            "Action": [
              "s3:*",
              "ec2:Describe*",
              "elasticloadbalancing:Describe*",
              "autoscaling:Describe*",
              "cloudwatch:*",
              "logs:*",
              "sns:*"
            ],
            "Resource": "*"
          }]
        },
        "Roles": [{"Ref": "IamRole"}]
      }
    },
    "IamInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [{"Ref": "IamRole"}]
      }
    },
    "BastionSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "SSH Access to Bastion Instance",
        "VpcId": {"Ref": "VPC"},
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-bastion-access"]]}
          }
        ],
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {"Ref": "NetworkAccessIP"}
          },
          {
            "IpProtocol": "icmp",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": {"Ref": "NetworkAccessIP"}
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "BastionInstance": {
      "Type": "AWS::EC2::Instance",
      "DependsOn": [
        "BastionSecurityGroup",
        "IamInstanceProfile"
      ],
      "Properties": {
        "IamInstanceProfile": {"Ref": "IamInstanceProfile"},
        "ImageId": {
          "Fn::If": [
            "RHELHost",
            {"Fn::FindInMap": ["RegionMap",  {"Ref": "AWS::Region"}, "AMIRHEL7"]},
            {"Fn::If": [
              "UbuntuHost",
              {"Fn::FindInMap": ["RegionMap",  {"Ref": "AWS::Region"}, "AMIUbuntu14"]},
              {"Fn::If": [
                "WindowsHost",
                {"Fn::FindInMap": ["RegionMap",  {"Ref": "AWS::Region"}, "AMIWin2012"]},
                "unknown"
              ]}
            ]}
          ]
        },
        "InstanceInitiatedShutdownBehavior": "stop",
        "InstanceType": {
          "Fn::If": [
            "RHELHost",
            {"Fn::FindInMap": ["RegionMap",  {"Ref": "AWS::Region"}, "InstanceTypeRHEL7"]},
            {"Fn::If": [
              "UbuntuHost",
              {"Fn::FindInMap": ["RegionMap",  {"Ref": "AWS::Region"}, "InstanceTypeUbuntu14"]},
              {"Fn::If": [
                "WindowsHost",
                {"Fn::FindInMap": ["RegionMap",  {"Ref": "AWS::Region"}, "InstanceTypeWin2012"]},
                "unknown"
              ]}
            ]}
          ]
        },
        "KeyName": {"Ref": "Ec2KeyPair"},
        "Monitoring": "true",
        "SecurityGroupIds": [
          {"Ref": "BastionSecurityGroup"},
          {"Ref": "InternalAccessSecurityGroup"}
        ],
        "SubnetId": {"Ref": "PublicSubnet"},
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeType": "gp2"
            }
          }
        ],
        "UserData": {
          "Fn::If": [
            "RHELHost",
              {"Fn::Base64": {
                "Fn::Join": [
                  "", [
                    "#!/bin/bash\n",
                    {"Fn::FindInMap": ["bootstrap", "rhel", "warmebs"]},
                    "\n",
                    {"Fn::FindInMap": ["bootstrap", "rhel", "installpackages"]},
                    "\n",
                    {"Fn::FindInMap": ["bootstrap", "rhel", "installbastionpackages"]},
                    "\n",
                    {"Fn::FindInMap": ["bootstrap", "rhel", "installchefdk"]},
                    "\n"
                  ]
                ]
              }},
            {"Fn::If": [
              "UbuntuHost",
                {"Fn::Base64": {
                  "Fn::Join": [
                    "", [
                      "#!/bin/bash\n",
                      {"Fn::FindInMap": ["bootstrap", "ubuntu", "warmebs"]},
                      "\n",
                      {"Fn::FindInMap": ["bootstrap", "ubuntu", "installpackages"]},
                      "\n",
                      {"Fn::FindInMap": ["bootstrap", "ubuntu", "installbastionpackages"]},
                      "\n"
                    ]
                  ]
                }},
              {"Fn::If": [
                "WindowsHost",
                  {"Fn::Base64": "# PowerShell Goes Here"},
                  {"Fn::Base64": "# PowerShell Goes Here"}
              ]}
            ]}
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Ref": "AWS::StackName"}
          },
          {
            "Key": "Owner",
            "Value": {"Ref": "Owner"}
          },
          {
            "Key": "Project",
            "Value": {"Ref": "Project"}
          },
          {
            "Key": "DeleteAfter",
            "Value": {"Ref": "DeleteAfter"}
          }
        ]
      }
    },
    "BastionEIP": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain" : "vpc"
      }
    },
    "BastionEIPAssociation": {
      "Type": "AWS::EC2::EIPAssociation",
      "DependsOn": [
        "BastionInstance",
        "BastionEIP"
      ],
      "Properties": {
        "InstanceId": {"Ref": "BastionInstance"},
        "AllocationId": { "Fn::GetAtt" : [ "BastionEIP", "AllocationId" ]}
      }
    },
    "InboundPublicNetworkAclEntry220": {
      "Condition": "RHELHost",
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {"Ref": "PublicNetworkAcl"},
        "RuleNumber": "220",
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": {"Ref": "NetworkAccessIP"},
        "PortRange": {
          "From": "22",
          "To": "22"
        }
      }
    },
    "InboundPublicNetworkAclEntry221": {
      "Condition": "UbuntuHost",
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {"Ref": "PublicNetworkAcl"},
        "RuleNumber": "221",
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": {"Ref": "NetworkAccessIP"},
        "PortRange": {
          "From": "22",
          "To": "22"
        }
      }
    },
    "InboundPublicNetworkAclEntry222": {
      "Condition": "WindowsHost",
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {"Ref": "PublicNetworkAcl"},
        "RuleNumber": "222",
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": {"Ref": "NetworkAccessIP"},
        "PortRange": {
          "From": "3389",
          "To": "3389"
        }
      }
    },
    "InboundPublicNetworkAclEntry225": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {"Ref": "PublicNetworkAcl"},
        "RuleNumber": "225",
        "Protocol": "1",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": {"Ref": "NetworkAccessIP"},
        "Icmp": {
          "Code": "-1",
          "Type": "-1"
        },
        "PortRange": {
          "From": "-1",
          "To": "-1"
        }
      }
    }
  },
  "Outputs": {
    "Owner": {
      "Description": "Team or Individual that Owns this Formation.",
      "Value": {"Ref": "Owner"}
    },
    "Project": {
      "Description": "The project name",
      "Value": {"Ref": "Project"}
    },
    "DeleteAfter": {
      "Description": "It is ok to delete the Formation after this date",
      "Value": {"Ref": "DeleteAfter"}
    },
    "KeyPairLoaded": {
      "Description": "Key Pair used.",
      "Value": {"Ref": "Ec2KeyPair"}
    },
    "VPC": {
      "Description": "VPC Used",
      "Value": {"Ref": "VPC"}
    },
    "BastionEIP": {
      "Description": "Bastion External IP Address",
      "Value": {"Ref": "BastionEIP"}
    },
    "BastionSecurityGroup": {
      "Description": "Bastion Security Group to Allow Remote Access",
      "Value": {"Ref": "BastionSecurityGroup"}
    },
    "IAMRole": {
      "Description": "IAM Instance Profile Role Created.",
      "Value": {"Ref": "IamRole"}
    },
    "DeployedToSubnet": {
      "Description": "Public Subnet the Bastion Host was Deployed on.",
      "Value": {"Ref": "PublicSubnet"}
    }
  },
  "Metadata" : {
    "AWS::CloudFormation::Interface" : {
      "ParameterGroups" : [
        {
          "Label" : { "default" : "Ownership" },
          "Parameters" : [ "Owner", "Project", "DeleteAfter" ]
        },
        {
          "Label" : { "default" : "Instance Settings" },
          "Parameters" : [ "Ec2KeyPair", "BastionOS" ]
        },
        {
          "Label" : { "default" : "Network Configuration" },
          "Parameters" : [
            "VPC",
            "PublicSubnet",
            "InternalAccessSecurityGroup",
            "PublicNetworkAcl",
            "NetworkAccessIP"
          ]
        }
      ],
      "ParameterLabels" : {
        "Owner" : { "default" : "Team or Individual Owner" },
        "DeleteAfter" : { "default" : "Delete After Date" },
        "PublicSubnet" : { "default" : "Public Subnet" },
        "PublicNetworkAcl" : { "default" : "Public Network ACL" },
        "InternalAccessSecurityGroup" : { "default" : "Instance Access Security Group" },
        "NetworkAccessIP" : { "default" : "Network IP to Access Bastion Host" },
        "BastionOS" : { "default" : "Bastion OS" }
      }
    }
  }
}
