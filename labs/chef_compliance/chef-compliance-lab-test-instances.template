{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Stelligent Chef Compliance Lab by Levon Becker v20160420-1400",
  "Parameters": {
    "Ec2KeyPair": {
      "Description": "Select Keypair to Assign to EC2 Instances",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "Owner": {
      "Description": "Enter Team or Individual Name Responsible for the Stack.",
      "Type": "String",
      "Default": "Levon Becker"
    },
    "Project": {
      "Description": "Enter Project Name.",
      "Type": "String",
      "Default": "Continuous Security"
    },
    "DeleteAfter": {
      "Description": "Enter Date It's Ok to Delete the Stack or 'Never' if meant to be persistent.",
      "Type": "String",
      "Default": "00/00/201x"
    },
    "VPC": {
      "Description": "Select VPC.",
      "Type": "AWS::EC2::VPC::Id"
    },
    "PrivateSubnet1": {
      "Description": "Private Subnet to Deploy RHEL 7 Instances.",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "PrivateSubnet2": {
      "Description": "Private Subnet to Deploy Ubuntu 14 Instances.",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "PrivateSubnet3": {
      "Description": "Private Subnet to Deploy Windows 2012 R2 Instances.",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "InternalAccessSecurityGroup": {
      "Description": "Security Group That Allows Chef Compliance Host Access to Instances.",
      "Type": "AWS::EC2::SecurityGroup::Id"
    },
    "NatSecurityGroup": {
      "Description": "Security Group That Allows Instance NAT to the Internet in Private Subnets.",
      "Type": "AWS::EC2::SecurityGroup::Id"
    },
    "RemoteSecurityGroup": {
      "Description": "Remote Network or IP that can Access the instances of VPN or Direct Connect.",
      "Type": "AWS::EC2::SecurityGroup::Id"
    }
  },
  "Mappings": {
    "RegionMap": {
      "us-west-2": {
        "AMIRHEL7": "ami-775e4f16",
        "AMIUbuntu14": "ami-9abea4fb",
        "AMIWin2012": "ami-1719f677",
        "InstanceTypeRHEL7": "t2.micro",
        "InstanceTypeUbuntu14": "t2.micro",
        "InstanceTypeWin2012": "t2.medium"
      },
      "us-east-1": {
        "AMIRHEL7": "ami-2051294a",
        "AMIUbuntu14": "ami-fce3c696",
        "AMIWin2012": "ami-3d787d57",
        "InstanceTypeRHEL7": "t2.micro",
        "InstanceTypeUbuntu14": "t2.micro",
        "InstanceTypeWin2012": "t2.medium"
      }
    },
    "bootstrap": {
      "rhel": {
        "warmebs": "echo 'ACTION: Performing EBS Warming' && dd if=/dev/xvda of=/dev/xvda conv=notrunc bs=1M status=progress",
        "installpackages": "yum install -y curl wget mlocate ca-certificates openssl vim"
      },
      "ubuntu": {
        "warmebs": "echo 'ACTION: Performing EBS Warming' && dd if=/dev/xvda of=/dev/xvda conv=notrunc bs=1M status=progress",
        "installpackages": "apt-get update && apt-get install curl wget cloud-utils ca-certificates vim"
      }
    }
  },
  "Resources": {
    "IamRole": {
      "Type"  : "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [{"Effect": "Allow", "Principal": {"Service": ["ec2.amazonaws.com"]}, "Action": ["sts:AssumeRole"]}]
        },
        "Path": "/"
      }
    },
    "IamPolicies": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-instance-policy"]]},
        "PolicyDocument": {
          "Statement": [{
            "Effect": "Allow",
            "Action": [
              "s3:*",
              "ec2:Describe*",
              "elasticloadbalancing:Describe*",
              "autoscaling:Describe*",
              "cloudwatch:*",
              "logs:*",
              "sns:*"
            ],
            "Resource": "*"
          }]
        },
        "Roles": [{"Ref": "IamRole"}]
      }
    },
    "IamInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [{"Ref": "IamRole"}]
      }
    },
    "EC2InstanceRHEL7": {
      "DependsOn": [
        "IamInstanceProfile"
      ],
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": {
          "Fn::FindInMap": [
            "RegionMap",
            {"Ref": "AWS::Region"},
            "InstanceTypeRHEL7"
          ]
        },
        "IamInstanceProfile": {"Ref": "IamInstanceProfile"},
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {"Ref": "AWS::Region"},
            "AMIRHEL7"
          ]
        },
        "NetworkInterfaces": [{
          "GroupSet": [
            {"Ref": "InternalAccessSecurityGroup"},
            {"Ref": "NatSecurityGroup"},
            {"Ref": "RemoteSecurityGroup"}
          ],
          "AssociatePublicIpAddress": "false",
          "DeviceIndex": "0",
          "DeleteOnTermination": "true",
          "SubnetId": {"Ref": "PrivateSubnet1"}
        }],
        "KeyName": {"Ref": "Ec2KeyPair"},
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeType": "gp2"
            }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                {
                  "Fn::FindInMap": [
                    "bootstrap",
                    "rhel",
                    "warmebs"
                  ]
                },
                "\n",
                {
                  "Fn::FindInMap": [
                    "bootstrap",
                    "rhel",
                    "installpackages"
                  ]
                },
                "\n"
              ]
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-rhel7"]]}
          },
          {
            "Key": "Owner",
            "Value": {"Ref": "Owner"}
          },
          {
            "Key": "Project",
            "Value": {"Ref": "Project"}
          }
        ]
      }
    },
    "EC2InstanceUbuntu14": {
      "DependsOn": [
        "IamInstanceProfile"
      ],
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": {
          "Fn::FindInMap": [
            "RegionMap",
            {"Ref": "AWS::Region"},
            "InstanceTypeUbuntu14"
          ]
        },
        "IamInstanceProfile": {"Ref": "IamInstanceProfile"},
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {"Ref": "AWS::Region"},
            "AMIUbuntu14"
          ]
        },
        "NetworkInterfaces": [{
          "GroupSet": [
            {"Ref": "InternalAccessSecurityGroup"},
            {"Ref": "NatSecurityGroup"},
            {"Ref": "RemoteSecurityGroup"}
          ],
          "AssociatePublicIpAddress": "false",
          "DeviceIndex": "0",
          "DeleteOnTermination": "true",
          "SubnetId": {"Ref": "PrivateSubnet2"}
        }],
        "KeyName": {"Ref": "Ec2KeyPair"},
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeType": "gp2"
            }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "", [
                "#!/bin/bash\n",
                {"Fn::FindInMap": ["bootstrap", "ubuntu", "warmebs"]},
                "\n",
                {"Fn::FindInMap": ["bootstrap", "ubuntu", "installpackages"]},
                "\n"
              ]
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-ubuntu14"]]}
          },
          {
            "Key": "Owner",
            "Value": {"Ref": "Owner"}
          },
          {
            "Key": "Project",
            "Value": {"Ref": "Project"}
          }
        ]
      }
    },
    "EC2InstanceWin2012": {
      "DependsOn": [
        "IamInstanceProfile"
      ],
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": {
          "Fn::FindInMap": [
            "RegionMap",
            {"Ref": "AWS::Region"},
            "InstanceTypeWin2012"
          ]
        },
        "IamInstanceProfile": {"Ref": "IamInstanceProfile"},
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {"Ref": "AWS::Region"},
            "AMIWin2012"
          ]
        },
        "NetworkInterfaces": [{
          "GroupSet": [
            {"Ref": "InternalAccessSecurityGroup"},
            {"Ref": "NatSecurityGroup"},
            {"Ref": "RemoteSecurityGroup"}
          ],
          "AssociatePublicIpAddress": "false",
          "DeviceIndex": "0",
          "DeleteOnTermination": "true",
          "SubnetId": {"Ref": "PrivateSubnet3"}
        }],
        "KeyName": {"Ref": "Ec2KeyPair"},
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeType": "gp2"
            }
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-win2012"]]}
          },
          {
            "Key": "Owner",
            "Value": {"Ref": "Owner"}
          },
          {
            "Key": "Project",
            "Value": {"Ref": "Project"}
          }
        ]
      }
    }
  },
  "Outputs": {
    "Owner": {
      "Description": "Team or Individual that Owns this Formation.",
      "Value": {"Ref": "Owner"}
    },
    "Project": {
      "Description": "The project name",
      "Value": {"Ref": "Project"}
    },
    "DeleteAfter": {
      "Description": "It is ok to delete the Formation after this date",
      "Value": {"Ref": "DeleteAfter"}
    },
    "KeyPairLoaded": {
      "Description": "Key Pair used.",
      "Value": {"Ref": "Ec2KeyPair"}
    },
    "VPC": {
      "Description": "VPC Used",
      "Value": {"Ref": "VPC"}
    },
    "IAMRole": {
      "Description": "IAM Instance Profile Role Created.",
      "Value": {"Ref": "IamRole"}
    },
    "PrivateSubnet1": {
      "Description": "Private Subnet RHEL Instance Deployed to.",
      "Value": {"Ref": "PrivateSubnet1"}
    },
    "PrivateSubnet2": {
      "Description": "Private Subnet Ubuntu Instance Deployed to.",
      "Value": {"Ref": "PrivateSubnet2"}
    },
    "PrivateSubnet3": {
      "Description": "Private Subnet Windows Instance Deployed to.",
      "Value": {"Ref": "PrivateSubnet3"}
    }
  },
  "Metadata" : {
    "AWS::CloudFormation::Interface" : {
      "ParameterGroups" : [
        {
          "Label" : { "default" : "Ownership" },
          "Parameters" : [ "Owner", "Project", "DeleteAfter" ]
        },
        {
          "Label" : { "default" : "Instance Settings" },
          "Parameters" : [
            "VPC",
            "Ec2KeyPair",
            "PrivateSubnet1",
            "PrivateSubnet2",
            "PrivateSubnet3",
            "InternalAccessSecurityGroup",
            "RemoteSecurityGroup",
            "NatSecurityGroup"
          ]
        }
      ],
      "ParameterLabels" : {
        "Owner" : { "default" : "Team or Individual Owner" },
        "DeleteAfter" : { "default" : "Delete After Date" },
        "PrivateSubnet1" : { "default" : "Private Subnet for RHEL Test Instance" },
        "PrivateSubnet2" : { "default" : "Private Subnet for Ubuntu Test Instance" },
        "PrivateSubnet3" : { "default" : "Private Subnet for Windows Test Instance" },
        "InternalAccessSecurityGroup" : { "default" : "Instance Access Security Group" },
        "NatSecurityGroup" : { "default" : "NAT Access Security Group" },
        "Ec2KeyPair" : { "default" : "EC2 Access Keypair" }
      }
    }
  }
}