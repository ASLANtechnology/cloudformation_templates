{
  "AWSTemplateFormatVersion":"2010-09-09",
  "Description":"OpsWorks stack and Deployment Pipeline in CodePipeline",
  "Parameters":{
    "ServiceRole":{
      "Default":"aws-opsworks-service-role",
      "Description":"The OpsWorks service role",
      "Type":"String",
      "MinLength":"1",
      "MaxLength":"64",
      "AllowedPattern":"[a-zA-Z][a-zA-Z0-9-]*",
      "ConstraintDescription":"must begin with a letter and contain only alphanumeric characters."
    },
    "InstanceRole":{
      "Default":"aws-opsworks-ec2-role",
      "Description":"The OpsWorks instance role",
      "Type":"String",
      "MinLength":"1",
      "MaxLength":"64",
      "AllowedPattern":"[a-zA-Z][a-zA-Z0-9-]*",
      "ConstraintDescription":"must begin with a letter and contain only alphanumeric characters."
    },
    "AppName":{
      "Default":"myapp",
      "Description":"The app name",
      "Type":"String",
      "MinLength":"1",
      "MaxLength":"64",
      "AllowedPattern":"[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription":"must begin with a letter and contain only alphanumeric characters."
    },
    "KeyName":{
      "Description":"Name of an existing EC2 KeyPair for SSH access to the instances.",
      "Type":"AWS::EC2::KeyPair::KeyName"
    },
    "RepositoryName":{
      "Description":"The name of the CodeCommit repo",
      "Default":"opsworks-demo",
      "Type":"String",
      "AllowedPattern":"[\\x20-\\x7E]*",
      "ConstraintDescription":"Can contain only ASCII characters."
    },
    "RepositoryBranch":{
      "Description":"The name of the branch for the CodeCommit repo",
      "Type":"String",
      "Default":"master",
      "AllowedPattern":"[\\x20-\\x7E]*",
      "ConstraintDescription":"Can contain only ASCII characters."
    }
  },
  "Metadata":{
    "AWS::CloudFormation::Interface":{
      "ParameterGroups":[
        {
          "Label":{
            "default":"Dynamic Configuration"
          },
          "Parameters":[
            "KeyName",
            "AppName"
          ]
        },
        {
          "Label":{
            "default":"CodeCommit Configuration"
          },
          "Parameters":[
            "RepositoryName",
            "RepositoryBranch"
          ]
        }
      ]
    }
  },
  "Mappings":{
    "AWSInstanceType2Virt":{
      "t2.micro":{
        "Virt":"HVM"
      },
      "t2.small":{
        "Virt":"HVM"
      },
      "t2.medium":{
        "Virt":"HVM"
      },
      "t2.large":{
        "Virt":"HVM"
      }
    },
    "AWSInstanceType2EBSOpt":{
      "t2.micro":{
        "EBSOpt":"false"
      },
      "t2.small":{
        "EBSOpt":"false"
      },
      "t2.medium":{
        "EBSOpt":"false"
      },
      "t2.large":{
        "EBSOpt":"false"
      }
    },
    "AWSRegionVirt2AMI":{
      "us-east-1":{
        "HVM":"ami-8fcee4e5"
      },
      "us-west-2":{
        "HVM":"ami-63b25203"
      }
    },
    "AWSRegionToAMI":{
      "us-east-1":{
        "AMIID":"ami-2b3b6041"
      },
      "us-west-2":{
        "AMIID":"ami-ac6872cd"
      },
      "eu-west-1":{
        "AMIID":"ami-03238b70"
      },
      "ap-northeast-1":{
        "AMIID":"ami-fb2f1295"
      },
      "ap-southeast-2":{
        "AMIID":"ami-43547120"
      },
      "us-west-1":{
        "AMIID":"ami-bfe095df"
      },
      "ap-southeast-1":{
        "AMIID":"ami-c78f43a4"
      },
      "eu-central-1":{
        "AMIID":"ami-e1e6f88d"
      }
    }
  },
  "Resources":{
    "myStack":{
      "Type":"AWS::OpsWorks::Stack",
      "Properties":{
        "Name":{
          "Ref":"AWS::StackName"
        },
        "DefaultOs":"Amazon Linux 2015.09",
        "ConfigurationManager":{
          "Name":"Chef",
          "Version":"11.10"
        },
        "DefaultRootDeviceType":"ebs",
        "ServiceRoleArn":{
          "Fn::Join":[
            "",
            [
              "arn:aws:iam::",
              {
                "Ref":"AWS::AccountId"
              },
              ":role/",
              {
                "Ref":"ServiceRole"
              }
            ]
          ]
        },
        "DefaultInstanceProfileArn":{
          "Fn::Join":[
            "",
            [
              "arn:aws:iam::",
              {
                "Ref":"AWS::AccountId"
              },
              ":instance-profile/",
              {
                "Ref":"InstanceRole"
              }
            ]
          ]
        },
        "UseCustomCookbooks":"true",
        "UseOpsworksSecurityGroups":"true",
        "CustomCookbooksSource":{
          "Type":"archive",
          "Url":"https://s3.amazonaws.com/stelligent-training-public/public/codepipeline/aws-codepipeline-s3-aws-codedeploy_linux.zip"
        }
      }
    },
    "myLayer":{
      "Type":"AWS::OpsWorks::Layer",
      "DependsOn":"myApp",
      "Properties":{
        "StackId":{
          "Ref":"myStack"
        },
        "Type":"web",
        "Shortname":"web",
        "EnableAutoHealing":"true",
        "AutoAssignElasticIps":"false",
        "AutoAssignPublicIps":"true",
        "CustomSecurityGroupIds":[
          {
            "Fn::GetAtt":[
              "OpsWorksSecurityGroup",
              "GroupId"
            ]
          }
        ],
        "Name":"MyStaticApp"
      }
    },
    "myAppInstance1":{
      "Type":"AWS::OpsWorks::Instance",
      "Properties":{
        "StackId":{
          "Ref":"myStack"
        },
        "LayerIds":[
          {
            "Ref":"myLayer"
          }
        ],
        "InstanceType":"t2.medium"
      }
    },
    "OpsWorksSecurityGroup":{
      "Type":"AWS::EC2::SecurityGroup",
      "Properties":{
        "GroupDescription":"Allow inbound requests from the ELB to the OpsWorks instances",
        "SecurityGroupIngress":[
          {
            "IpProtocol":"tcp",
            "FromPort":"80",
            "ToPort":"80"
          }
        ]
      }
    },
    "myApp":{
      "Type":"AWS::OpsWorks::App",
      "Properties":{
        "StackId":{
          "Ref":"myStack"
        },
        "Type":"static",
        "Shortname":"web",
        "Name":{
          "Ref":"AppName"
        },
        "AppSource":{
          "Type":"archive",
          "Url":"https://s3.amazonaws.com/stelligent-training-public/public/codepipeline/aws-codepipeline-s3-aws-codedeploy_linux.zip"
        }
      }
    },
    "CodePipelineTrustRole":{
      "Type":"AWS::IAM::Role",
      "Properties":{
        "AssumeRolePolicyDocument":{
          "Statement":[
            {
              "Sid":"1",
              "Effect":"Allow",
              "Principal":{
                "Service":[
                  "codepipeline.amazonaws.com"
                ]
              },
              "Action":"sts:AssumeRole"
            }
          ]
        },
        "Path":"/"
      }
    },
    "CodePipelineRolePolicies":{
      "Type":"AWS::IAM::Policy",
      "Properties":{
        "PolicyName":"CodePipelinePolicy",
        "PolicyDocument":{
          "Statement":[
            {
              "Action":[
                "s3:*"
              ],
              "Resource":[
                "*"
              ],
              "Effect":"Allow"
            },
            {
              "Action":[
                "s3:PutBucketPolicy",
                "s3:PutObject"
              ],
              "Resource":[
                {
                  "Fn::Join":[
                    "",
                    [
                      "arn:aws:s3:::demo-",
                      {
                        "Ref":"AWS::Region"
                      },
                      "-",
                      {
                        "Ref":"AWS::AccountId"
                      },
                      "-",
                      {
                        "Ref":"AWS::StackName"
                      }
                    ]
                  ]
                }
              ],
              "Effect":"Allow"
            },
            {
              "Action":[
                "codecommit:GetBranch",
                "codecommit:GetCommit",
                "codecommit:UploadArchive",
                "codecommit:GetUploadArchiveStatus",
                "codecommit:CancelUploadArchive"
              ],
              "Resource":"*",
              "Effect":"Allow"
            },
            {
              "Action":[
                "codepipeline:*",
                "iam:ListRoles",
                "iam:PassRole",
                "opsworks:*",
                "elasticbeanstalk:DescribeApplications",
                "elasticbeanstalk:DescribeEnvironments",
                "lambda:GetFunctionConfiguration",
                "lambda:ListFunctions"
              ],
              "Resource":"*",
              "Effect":"Allow"
            }
          ]
        },
        "Roles":[
          {
            "Ref":"CodePipelineTrustRole"
          }
        ]
      }
    },
    "MyPipeline":{
      "Type":"AWS::CodePipeline::Pipeline",
      "DependsOn":[
        "myStack",
        "myApp",
        "myLayer"
      ],
      "Properties":{
        "Name":{
          "Fn::Join":[
            "",
            [
              {
                "Ref":"AWS::StackName"
              },
              "-Pipeline"
            ]
          ]
        },
        "RoleArn":{
          "Fn::GetAtt":[
            "CodePipelineTrustRole",
            "Arn"
          ]
        },
        "Stages":[
          {
            "Name":"Source",
            "Actions":[
              {
                "InputArtifacts":[

                ],
                "Name":"Source",
                "ActionTypeId":{
                  "Category":"Source",
                  "Owner":"AWS",
                  "Version":"1",
                  "Provider":"CodeCommit"
                },
                "OutputArtifacts":[
                  {
                    "Name":{
                      "Fn::Join":[
                        "",
                        [
                          {
                            "Ref":"AWS::StackName"
                          },
                          "-SourceArtifact"
                        ]
                      ]
                    }
                  }
                ],
                "Configuration":{
                  "BranchName":{
                    "Ref":"RepositoryBranch"
                  },
                  "RepositoryName":{
                    "Ref":"RepositoryName"
                  }
                },
                "RunOrder":1
              }
            ]
          },
          {
            "Name":"Deploy",
            "Actions":[
              {
                "Name":"DeployStaticWebsite",
                "InputArtifacts":[
                  {
                    "Name":{
                      "Fn::Join":[
                        "",
                        [
                          {
                            "Ref":"AWS::StackName"
                          },
                          "-SourceArtifact"
                        ]
                      ]
                    }
                  }
                ],
                "ActionTypeId":{
                  "Category":"Deploy",
                  "Owner":"AWS",
                  "Version":"1",
                  "Provider":"OpsWorks"
                },
                "OutputArtifacts":[

                ],
                "Configuration":{
                  "StackId":{
                    "Ref":"myStack"
                  },
                  "AppId":{
                    "Ref":"myApp"
                  },
                  "DeploymentType":"deploy_app",
                  "LayerId":{
                    "Ref":"myLayer"
                  }
                },
                "RunOrder":1
              }
            ]
          }
        ],
        "ArtifactStore":{
          "Type":"S3",
          "Location":{
            "Fn::Join":[
              "",
              [
                "codepipeline-",
                {
                  "Ref":"AWS::Region"
                },
                "-",
                {
                  "Ref":"AWS::AccountId"
                }
              ]
            ]
          }
        }
      }
    }
  },
  "Outputs":{
    "PipelineUrl":{
      "Value":{
        "Fn::Join":[
          "",
          [
            "https://console.aws.amazon.com/codepipeline/home?region=",
            {
              "Ref":"AWS::Region"
            },
            "#/view/",
            {
              "Ref":"MyPipeline"
            }
          ]
        ]
      },
      "Description":"Pipeline Url"
    }
  }
}