{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "VPC by Levon Becker v20160404-0915",
  "Parameters": {
    "Owner": {
      "Description": "Enter Team or Individual Name Responsible for the Stack.",
      "Type": "String",
      "Default": "Levon Becker"
    },
    "Project": {
      "Description": "Enter Project Name.",
      "Type": "String",
      "Default": "Continuous Security"
    },
    "DeleteAfter": {
      "Description": "Enter Date It's Ok to Delete the Stack.",
      "Type": "String",
      "Default": "05/01/2016",
      "AllowedPattern": "^(1[0-2]|0[1-9])/(3[01]|[12][0-9]|0[1-9])/[0-9]{4}$"
    },
    "VPCSubnetCidrBlock": {
      "Description": "Enter VPC CIDR Block.",
      "Type": "String",
      "Default": "10.20.0.0/20",
      "MinLength": "10",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    },
    "PublicSubnetCidrBlock1": {
      "Description": "Enter Public Subnet 1 CIDR Block.",
      "Type": "String",
      "Default": "10.20.0.0/24",
      "MinLength": "10",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    },
    "PublicSubnetCidrBlock2": {
      "Description": "Enter Public Subnet 2 CIDR Block.",
      "Type": "String",
      "Default": "10.20.1.0/24",
      "MinLength": "10",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    },
    "PublicSubnetCidrBlock3": {
      "Description": "Enter Public Subnet 3 CIDR Block.",
      "Type": "String",
      "Default": "10.20.2.0/24",
      "MinLength": "10",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    },
    "PrivateSubnetCidrBlock1": {
      "Description": "Enter Private Subnet 1 CIDR Block.",
      "Type": "String",
      "Default": "10.20.3.0/24",
      "MinLength": "10",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    },
    "PrivateSubnetCidrBlock2": {
      "Description": "Enter Private Subnet 2 CIDR Block.",
      "Type": "String",
      "Default": "10.20.4.0/24",
      "MinLength": "10",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    },
    "PrivateSubnetCidrBlock3": {
      "Description": "Enter Private Subnet 3 CIDR Block.",
      "Type": "String",
      "Default": "10.20.5.0/24",
      "MinLength": "10",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    }
  },
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "CidrBlock": {"Ref": "VPCSubnetCidrBlock"},
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Ref": "AWS::StackName"}
          },
          {
            "Key": "Owner",
            "Value": {"Ref": "Owner"}
          },
          {
            "Key": "Project",
            "Value": {"Ref": "Project"}
          }
        ]
      }
    },
    "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "AvailabilityZone": {"Fn::Join": ["", [{"Ref": "AWS::Region"}, "a"]]},
        "CidrBlock": {"Ref": "PublicSubnetCidrBlock1"},
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-public-az1"]]}
          },
          {
            "Key": "Owner",
            "Value": {"Ref": "Owner"}
          },
          {
            "Key": "Project",
            "Value": {"Ref": "Project"}
          }
        ]
      }
    },
    "PublicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "AvailabilityZone": {"Fn::Join": ["", [{"Ref": "AWS::Region"}, "b"]]},
        "CidrBlock": {"Ref": "PublicSubnetCidrBlock2"},
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-public-az2"]]}
          },
          {
            "Key": "Owner",
            "Value": {"Ref": "Owner"}
          },
          {
            "Key": "Project",
            "Value": {"Ref": "Project"}
          }
        ]
      }
    },
    "PublicSubnet3": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "AvailabilityZone": {"Fn::Join": ["", [{"Ref": "AWS::Region"}, "c"]]},
        "CidrBlock": {"Ref": "PublicSubnetCidrBlock3"},
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-public-az3"]]}
          },
          {
            "Key": "Owner",
            "Value": {"Ref": "Owner"}
          },
          {
            "Key": "Project",
            "Value": {"Ref": "Project"}
          }
        ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Ref": "AWS::StackName"}
          },
          {
            "Key": "Owner",
            "Value": {"Ref": "Owner"}
          },
          {
            "Key": "Project",
            "Value": {"Ref": "Project"}
          }
        ]
      }
    },
    "GatewayToInternet": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "DependsOn": [
        "InternetGateway",
        "VPC"
      ],
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-public"]]}
          },
          {
            "Key": "Network",
            "Value": "Public"
          },
          {
            "Key": "Owner",
            "Value": {"Ref": "Owner"}
          },
          {
            "Key": "Project",
            "Value": {"Ref": "Project"}
          }
        ]
      }
    },
    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": [
        "PublicRouteTable",
        "InternetGateway"
      ],
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicSubnetRouteTableAssociation1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "PublicSubnet1",
        "PublicRouteTable"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet1"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        }
      }
    },
    "PublicSubnetRouteTableAssociation2": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "PublicSubnet2",
        "PublicRouteTable",
        "GatewayToInternet"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet2"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        }
      }
    },
    "PublicSubnetRouteTableAssociation3": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "PublicSubnet3",
        "PublicRouteTable",
        "GatewayToInternet"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet3"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        }
      }
    },
    "PrivateSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "AvailabilityZone": {"Fn::Join": ["", [{"Ref": "AWS::Region"}, "a"]]},
        "CidrBlock": {"Ref": "PrivateSubnetCidrBlock1"},
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-private-az1"]]}
          },
          {
            "Key": "Network",
            "Value": "Private"
          },
          {
            "Key": "Owner",
            "Value": {"Ref": "Owner"}
          },
          {
            "Key": "Project",
            "Value": {"Ref": "Project"}
          }
        ]
      }
    },
    "PrivateSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "AvailabilityZone": {"Fn::Join": ["", [{"Ref": "AWS::Region"}, "b"]]},
        "CidrBlock": {"Ref": "PrivateSubnetCidrBlock2"},
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-private-az2"]]}
          },
          {
            "Key": "Network",
            "Value": "Private"
          },
          {
            "Key": "Owner",
            "Value": {"Ref": "Owner"}
          },
          {
            "Key": "Project",
            "Value": {"Ref": "Project"}
          }
        ]
      }
    },
    "PrivateSubnet3": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "AvailabilityZone": {"Fn::Join": ["", [{"Ref": "AWS::Region"}, "c"]]},
        "CidrBlock": {"Ref": "PrivateSubnetCidrBlock3"},
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-private-az3"]]}
          },
          {
            "Key": "Network",
            "Value": "Private"
          },
          {
            "Key": "Owner",
            "Value": {"Ref": "Owner"}
          },
          {
            "Key": "Project",
            "Value": {"Ref": "Project"}
          }
        ]
      }
    },
    "PrivateRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-private"]]}
          },
          {
            "Key": "Network",
            "Value": "Private"
          },
          {
            "Key": "Owner",
            "Value": {"Ref": "Owner"}
          },
          {
            "Key": "Project",
            "Value": {"Ref": "Project"}
          }
        ]
      }
    },
    "PrivateSubnetRouteTableAssociation1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "PrivateSubnet1",
        "PrivateRouteTable"
      ],
      "Properties": {
        "SubnetId": {"Ref": "PrivateSubnet1"},
        "RouteTableId": {"Ref": "PrivateRouteTable"}
      }
    },
    "PrivateSubnetRouteTableAssociation2": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "PrivateSubnet2",
        "PrivateRouteTable"
      ],
      "Properties": {
        "SubnetId": {"Ref": "PrivateSubnet2"},
        "RouteTableId": {"Ref": "PrivateRouteTable"}
      }
    },
    "PrivateSubnetRouteTableAssociation3": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "PrivateSubnet3",
        "PrivateRouteTable"
      ],
      "Properties": {
        "SubnetId": {"Ref": "PrivateSubnet3"},
        "RouteTableId": {"Ref": "PrivateRouteTable"}
      }
    },
    "S3VpcEndpoint": {
      "Type": "AWS::EC2::VPCEndpoint",
      "DependsOn": [
        "VPC",
        "PrivateRouteTable",
        "PublicRouteTable"
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "*",
              "Effect": "Allow",
              "Resource": "*",
              "Principal": "*"
            }
          ]
        },
        "RouteTableIds": [
          {"Ref": "PrivateRouteTable"},
          {"Ref": "PublicRouteTable"}
        ],
        "ServiceName": {"Fn::Join": ["", ["com.amazonaws.", {"Ref": "AWS::Region"}, ".s3" ]]},
        "VpcId": {"Ref": "VPC"}
      }
    },
    "PublicNetworkAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-public-acl"]]}
          },
          {
            "Key": "Network",
            "Value": "Public"
          },
          {
            "Key": "Owner",
            "Value": {"Ref": "Owner"}
          },
          {
            "Key": "Project",
            "Value": {"Ref": "Project"}
          }
        ]
      }
    },
    "InboundPublicNetworkAclEntry100": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "PublicNetworkAcl",
      "Properties": {
        "NetworkAclId": {"Ref": "PublicNetworkAcl"},
        "RuleNumber": "100",
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "80",
          "To": "80"
        }
      }
    },
    "InboundPublicNetworkAclEntry105": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "PublicNetworkAcl",
      "Properties": {
        "NetworkAclId": {"Ref": "PublicNetworkAcl"},
        "RuleNumber": "105",
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "443",
          "To": "443"
        }
      }
    },
    "InboundPublicNetworkAclEntry110": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "PublicNetworkAcl",
      "Properties": {
        "NetworkAclId": {"Ref": "PublicNetworkAcl"},
        "RuleNumber": "110",
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "8080",
          "To": "8080"
        }
      }
    },
    "InboundPublicNetworkAclEntry115": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "PublicNetworkAcl",
      "Properties": {
        "NetworkAclId": {"Ref": "PublicNetworkAcl"},
        "RuleNumber": "115",
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "8443",
          "To": "8443"
        }
      }
    },
    "InboundPublicNetworkAclEntry120": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "PublicNetworkAcl",
      "Properties": {
        "NetworkAclId": {"Ref": "PublicNetworkAcl"},
        "RuleNumber": "120",
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "22",
          "To": "22"
        }
      }
    },
    "InboundPublicNetworkAclEntry125": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "PublicNetworkAcl",
      "Properties": {
        "NetworkAclId": {"Ref": "PublicNetworkAcl"},
        "RuleNumber": "125",
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "3389",
          "To": "3389"
        }
      }
    },
    "InboundPublicNetworkAclEntry130": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "PublicNetworkAcl",
      "Properties": {
        "NetworkAclId": {"Ref": "PublicNetworkAcl"},
        "RuleNumber": "130",
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "49152",
          "To": "65535"
        }
      }
    },
    "InboundPublicNetworkAclEntry135": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "PublicNetworkAcl",
      "Properties": {
        "NetworkAclId": {"Ref": "PublicNetworkAcl"},
        "RuleNumber": "135",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": {"Ref": "VPCSubnetCidrBlock"},
        "PortRange": {
          "From": "0",
          "To": "65535"
        }
      }
    },
    "OutboundPublicNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "PublicNetworkAcl",
      "Properties": {
        "NetworkAclId": {"Ref": "PublicNetworkAcl"},
        "RuleNumber": "100",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "0",
          "To": "65535"
        }
      }
    },
    "PublicSubnetNetworkAclAssociation1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn": ["PublicSubnet1", "PublicNetworkAcl"],
      "Properties": {
        "SubnetId": {"Ref": "PublicSubnet1" },
        "NetworkAclId": {"Ref": "PublicNetworkAcl"}
      }
    },
    "PublicSubnetNetworkAclAssociation2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn": ["PublicSubnet2", "PublicNetworkAcl"],
      "Properties": {
        "SubnetId": {"Ref": "PublicSubnet2" },
        "NetworkAclId": {"Ref": "PublicNetworkAcl"}
      }
    },
    "PublicSubnetNetworkAclAssociation3": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn": ["PublicSubnet3", "PublicNetworkAcl"],
      "Properties": {
        "SubnetId": {"Ref": "PublicSubnet3" },
        "NetworkAclId": {"Ref": "PublicNetworkAcl"}
      }
    },
    "PrivateNetworkAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-private-acl"]]}
          },
          {
            "Key": "Network",
            "Value": "Private"
          },
          {
            "Key": "Owner",
            "Value": {"Ref": "Owner"}
          },
          {
            "Key": "Project",
            "Value": {"Ref": "Project"}
          }
        ]
      }
    },
    "InboundEphemeralPrivateNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "PrivateNetworkAcl",
      "Properties": {
        "NetworkAclId": {
          "Ref": "PrivateNetworkAcl"
        },
        "RuleNumber": "100",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "0",
          "To": "65535"
        }
      }
    },
    "OutboundPrivateNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "PrivateNetworkAcl",
      "Properties": {
        "NetworkAclId": {
          "Ref": "PrivateNetworkAcl"
        },
        "RuleNumber": "100",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "0",
          "To": "65535"
        }
      }
    },
    "PrivateSubnetNetworkAclAssociation1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn": [
        "PrivateSubnet1",
        "PrivateNetworkAcl"
      ],
      "Properties": {
        "SubnetId":
        {
          "Ref": "PrivateSubnet1"
        },
        "NetworkAclId": {
          "Ref": "PrivateNetworkAcl"
        }
      }
    },
    "PrivateSubnetNetworkAclAssociation2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn": [
        "PrivateSubnet2",
        "PrivateNetworkAcl"
      ],
      "Properties": {
        "SubnetId":
        {
          "Ref": "PrivateSubnet2"
        },
        "NetworkAclId": {
          "Ref": "PrivateNetworkAcl"
        }
      }
    },
    "PrivateSubnetNetworkAclAssociation3": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn": [
        "PrivateSubnet3",
        "PrivateNetworkAcl"
      ],
      "Properties": {
        "SubnetId":
        {
          "Ref": "PrivateSubnet3"
        },
        "NetworkAclId": {
          "Ref": "PrivateNetworkAcl"
        }
      }
    },
    "InternalAccessSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "DependsOn": "VPC",
      "Properties": {
        "GroupDescription": "Instance to Instance Access in VPC",
        "VpcId": {"Ref": "VPC"},
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join": ["", [{"Ref": "AWS::StackName"}, "-instance-to-instance"]]}
          },
          {
            "Key": "Owner",
            "Value": {"Ref": "Owner"}
          },
          {
            "Key": "Project",
            "Value": {"Ref": "Project"}
          }
        ]
      }
    },
    "InternalAccessSecurityGroupIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "DependsOn": "InternalAccessSecurityGroup",
      "Properties": {
        "GroupId": {
          "Ref": "InternalAccessSecurityGroup"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "InternalAccessSecurityGroup"
        }
      }
    }
  },
  "Outputs": {
    "Owner": {
      "Description": "The dude or team to bug about cleaning up",
      "Value": {"Ref": "Owner"}
    },
    "Project": {
      "Description": "The project name",
      "Value": {"Ref": "Project"}
    },
    "VPCId": {
      "Description": "VPC ID",
      "Value": {"Ref": "VPC"}
    },
    "VPCe": {
      "Description": "VPC Endpoint ID",
      "Value": {"Ref": "S3VpcEndpoint"}
    },
    "PublicSubnetIDs": {
      "Description": "Public Subnet IDs Created for VPC",
      "Value": {"Fn::Join": ["", [{"Ref": "PublicSubnet1"}, ", ", {"Ref": "PublicSubnet2"}, ", ", {"Ref": "PublicSubnet3"}]]}
    },
    "PrivateSubnetIDs": {
      "Description": "Private Subnet IDs Created for VPC",
      "Value": {"Fn::Join": ["", [{"Ref": "PrivateSubnet1"}, ", ", {"Ref": "PrivateSubnet2"}, ", ", {"Ref": "PrivateSubnet3"}]]}
    },
    "PublicSubnets": {
      "Description": "Public Subnet IDs Created for VPC",
      "Value": {
          "Fn::Join": [
          "", [
            "AZ1: ", {"Ref": "PublicSubnetCidrBlock1"}, ", ",
            "AZ2: ", {"Ref": "PublicSubnetCidrBlock2"}, ", ",
            "AZ3: ", {"Ref": "PublicSubnetCidrBlock3"}
          ]
        ]
      }
    },
    "PrivateSubnets": {
      "Description": "Public Subnet IDs Created for VPC",
      "Value": {
          "Fn::Join": [
          "", [
            "AZ1: ", {"Ref": "PrivateSubnetCidrBlock1"}, ", ",
            "AZ2: ", {"Ref": "PrivateSubnetCidrBlock2"}, ", ",
            "AZ3: ", {"Ref": "PrivateSubnetCidrBlock3"}
          ]
        ]
      }
    },
    "PublicRouteTable": {
      "Description": "Public Route Table Created for VPC",
      "Value": {"Ref": "PublicRouteTable"}
    },
    "PrivateRouteTable": {
      "Description": "Private Route Table Created for VPC",
      "Value": {"Ref": "PrivateRouteTable"}
    },
    "InternalAccessSecurityGroup": {
      "Description": "Instance to Instance Access within VPC",
      "Value": {"Ref": "InternalAccessSecurityGroup"}
    },
    "DeleteAfter": {
      "Description": "It is ok to delete this Formation after this date",
      "Value": {"Ref": "DeleteAfter"}
    }
  },
  "Metadata" : {
    "AWS::CloudFormation::Interface" : {
      "ParameterGroups" : [
        {
          "Label" : { "default" : "Ownership" },
          "Parameters" : [ "Owner", "Project", "DeleteAfter" ]
        },
        {
          "Label" : { "default" : "Network Configuration" },
          "Parameters" : [
            "VPCSubnetCidrBlock",
            "PublicSubnetCidrBlock1",
            "PublicSubnetCidrBlock2",
            "PublicSubnetCidrBlock3",
            "PrivateSubnetCidrBlock1",
            "PrivateSubnetCidrBlock2",
            "PrivateSubnetCidrBlock3"
          ]
        }
      ],
      "ParameterLabels" : {
        "Owner" : { "default" : "Team or Individual Owner" },
        "DeleteAfter" : { "default" : "Delete After Date" },
        "VPCSubnetCidrBlock" : { "default" : "VPC Subnet" },
        "PublicSubnetCidrBlock1" : { "default" : "Public Subnet 1" },
        "PublicSubnetCidrBlock2" : { "default" : "Public Subnet 2" },
        "PublicSubnetCidrBlock3" : { "default" : "Public Subnet 3" },
        "PrivateSubnetCidrBlock1" : { "default" : "Private Subnet 1" },
        "PrivateSubnetCidrBlock2" : { "default" : "Private Subnet 2" },
        "PrivateSubnetCidrBlock3" : { "default" : "Private Subnet 3" }
      }
    }
  }
}